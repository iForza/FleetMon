#!/bin/bash

# quick-update.sh
# –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ FleetMon —á–µ—Ä–µ–∑ git pull (–¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m' 
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DEPLOY_PATH="/opt/fleetmon"

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
check_directory() {
    if [ ! -d "$DEPLOY_PATH" ]; then
        log_error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ $DEPLOY_PATH –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
        log_info "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å–Ω–∞—á–∞–ª–∞: ./deploy/deploy.sh"
        exit 1
    fi
    
    cd $DEPLOY_PATH
    log_info "–ù–∞—Ö–æ–¥–∏–º—Å—è –≤: $(pwd)"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
update_code() {
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ GitHub..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    git fetch origin
    LOCAL=$(git rev-parse HEAD)
    REMOTE=$(git rev-parse origin/main)
    
    if [ "$LOCAL" = "$REMOTE" ]; then
        log_success "–ö–æ–¥ —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"
        return 0
    fi
    
    log_info "–ù–∞–π–¥–µ–Ω—ã –Ω–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –æ–±–Ω–æ–≤–ª—è–µ–º..."
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -n "$(git status --porcelain)" ]; then
        log_warning "–ù–∞–π–¥–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Å–æ–∑–¥–∞–Ω–∏–µ stash..."
        git stash push -m "Auto stash before update $(date)"
    fi
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    git reset --hard origin/main
    log_success "–ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
    log_info "–ò–∑–º–µ–Ω–µ–Ω–∏—è:"
    git log --oneline $LOCAL..HEAD | head -5
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
update_dependencies() {
    # Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if [ -f "backend/package.json" ] && [ -f "backend/package-lock.json" ]; then
        BACKEND_CHANGED=$(git diff --name-only $LOCAL..HEAD | grep "backend/package" || true)
        if [ -n "$BACKEND_CHANGED" ]; then
            log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
            cd backend && npm install --production
            cd ..
        fi
    fi
    
    # Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å–±–æ—Ä–∫–∞
    if [ -f "frontend/package.json" ]; then
        FRONTEND_CHANGED=$(git diff --name-only $LOCAL..HEAD | grep -E "(frontend/package|frontend/src)" || true)
        if [ -n "$FRONTEND_CHANGED" ]; then
            log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ —Å–±–æ—Ä–∫–∞..."
            cd frontend
            npm install
            npm run build
            cd ..
        fi
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏
update_version() {
    if [ -f "version.json" ]; then
        CURRENT_VERSION=$(node -p "require('./version.json').version" 2>/dev/null || echo "unknown")
        log_info "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $CURRENT_VERSION"
        
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞ –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    fi
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
restart_services() {
    log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ PM2..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    if pm2 list | grep -q "fleetmon-backend"; then
        pm2 restart fleetmon-backend
        log_success "Backend –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
    else
        log_warning "Backend –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PM2"
    fi
    
    if pm2 list | grep -q "fleetmon-frontend"; then
        pm2 restart fleetmon-frontend  
        log_success "Frontend –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
    else
        log_warning "Frontend –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PM2"
    fi
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PM2
    pm2 save
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
health_check() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    if netstat -tuln | grep -q ":3000"; then
        log_success "Backend –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"
    else
        log_error "Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"
        return 1
    fi
    
    if netstat -tuln | grep -q ":3001"; then
        log_success "Frontend –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3001"
    else
        log_error "Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3001"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    if curl -s --max-time 10 http://localhost:3000/api/health > /dev/null 2>&1; then
        log_success "API –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        log_warning "API –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    fi
    
    log_success "–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
show_status() {
    echo
    log_info "=== –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´ ==="
    echo "–í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: $(date)"
    echo "–ü—É—Ç—å: $DEPLOY_PATH"
    echo "Git commit: $(git rev-parse --short HEAD)"
    echo "Git branch: $(git branch --show-current)"
    echo
    echo "PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã:"
    pm2 status
    echo
    log_info "–õ–æ–≥–∏: pm2 logs"
    log_info "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: pm2 monit"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo
    log_info "üöÄ –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ FleetMon"
    echo
    
    check_directory
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    LOCAL=$(git rev-parse HEAD)
    
    update_code
    update_dependencies  
    update_version
    restart_services
    health_check
    show_status
    
    echo
    log_success "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ FleetMon –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    echo
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    --help|-h)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [--help]"
        echo "–ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ FleetMon –∏–∑ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
        echo ""
        echo "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç:"
        echo "  1. –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–¥ —á–µ—Ä–µ–∑ git pull"
        echo "  2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"
        echo "  3. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã"  
        echo "  4. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  $0           # –û–±—ã—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
        echo "  $0 --help    # –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        exit 0
        ;;
    *)
        main "$@"
        ;;
esac